//@ts-nocheck
"use client"
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/planes/grass-tile-1.gltf --transform 
Files: public/models/planes/grass-tile-1.gltf [11.17KB] > D:\work\websites\greenteam\grass-tile-1-transformed.glb [5.66KB] (49%)
*/

import React, { useEffect, useRef, useState } from "react"
import { useGLTF } from "@react-three/drei"
import * as THREE from "three"

export default function GrassTile1({ props }: { props?: any }) {
    const { nodes, materials } = useGLTF(
        "/models/transformed/grass-tile-1-transformed.glb",
    )
    const [hovered, setHovered] = useState(false)
    const grassRef = useRef<THREE.Mesh>(null!)
    useEffect(() => {
        grassRef.current.material = hovered
            ? materials["Rock.001"]
            : materials.Grass
    }, [hovered])

    return (
        <group
            {...props}
            dispose={null}
            onPointerEnter={() => setHovered(true)}
            onPointerLeave={() => setHovered(false)}
        >
            <mesh geometry={nodes.Cube.geometry} material={materials.Dirt} />
            <mesh
                ref={grassRef}
                geometry={nodes.Grass.geometry}
                material={materials.Grass}
                position={[0, 0.001, 0]}
            />
            <mesh
                geometry={nodes.Grass_1.geometry}
                material={materials["Grass-tall"]}
                position={[-0.092, 0.794, -0.487]}
                rotation={[Math.PI, 0, Math.PI]}
                scale={0.342}
            />
            <mesh
                geometry={nodes.Sphere.geometry}
                material={materials["Rock.001"]}
                position={[-0.497, 1.006, 0.31]}
                scale={[1, 0.558, 1]}
            />
        </group>
    )
}

useGLTF.preload("/models/transformed/grass-tile-1-transformed.glb")
